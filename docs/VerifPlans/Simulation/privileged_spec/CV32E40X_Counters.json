[
    {
        "Requirement Location": "Privileged Architecture\nSection 3.1.11, 3.1.13",
        "Feature": "Hardware Performance Monitor",
        "Sub Feature": "Count inhibit",
        "Feature Description": "mcountinhibit of mcycle stops count",
        "Verification Goal": "When mcountinhibit[0] is set to 1, the mcycle counter should stop counting and always return the same value",
        "Pass/Fail Criteria": "Self Checking Test",
        "Test Type": "Directed Self-Checking",
        "Coverage  Method": "Functional Coverage",
        "Link to Coverage": "uvm_pkg.uvm_test_top.env.cov_model.counters_covg.counters_cg.x_check_mcycle",
        "Comment": ""
    },
    {
        "Requirement Location": "",
        "Feature": "Hardware Performance Monitor",
        "Sub Feature": "",
        "Feature Description": "mcountinhibit of minstret stops count",
        "Verification Goal": "When mcountinhibit[2] is set to 1, the minstret counter should stop counting and always return the same value",
        "Pass/Fail Criteria": "Check against ISS",
        "Test Type": "Directed Self-Checking",
        "Coverage  Method": "Functional Coverage",
        "Link to Coverage": "uvm_pkg.uvm_test_top.env.cov_model.counters_covg.counters_cg.x_check_minstret",
        "Comment": ""
    },
    {
        "Requirement Location": "",
        "Feature": "Hardware Performance Monitor",
        "Sub Feature": "",
        "Feature Description": "mcountinhibit of mhpmcounterX stops count",
        "Verification Goal": "When any of mcountinhibit[3:31] is set to 1 (particularly, even if the corresponding counter has an mhpmevent enabled) then the counter should stop counting and always return the same value",
        "Pass/Fail Criteria": "Check against ISS",
        "Test Type": "Directed Self-Checking",
        "Coverage  Method": "Functional Coverage",
        "Link to Coverage": "uvm_pkg.uvm_test_top.env.cov_model.counters_covg.cg_idx_wrapper_*.mhpm_cg.x_check_mhpm",
        "Comment": ""
    },
    {
        "Requirement Location": "",
        "Feature": "Hardware Performance Monitor",
        "Sub Feature": "",
        "Feature Description": "mcountinhibit on mcycle/minstret doesn't stop mhpmcounterX",
        "Verification Goal": "When inhibit is set for mcycle and/or minstret, then event selection should still be able to make mhpmcounters count for those selectors",
        "Pass/Fail Criteria": "Check against ISS",
        "Test Type": "Directed Self-Checking",
        "Coverage  Method": "Functional Coverage",
        "Link to Coverage": "uvm_pkg.uvm_test_top.env.cov_model.counters_covg.cg_idx_wrapper_*.inhibit_mix_cg.x_check_*",
        "Comment": ""
    },
    {
        "Requirement Location": "",
        "Feature": "Hardware Performance Monitor",
        "Sub Feature": "mcycle",
        "Feature Description": "Counts the number of clock cycle executed by the processor core.",
        "Verification Goal": "Check that executing a set of instructions leads to mcycle having advanced the right amount (within some tolerance)",
        "Pass/Fail Criteria": "Self Checking Test",
        "Test Type": "Directed Self-Checking",
        "Coverage  Method": "Functional Coverage",
        "Link to Coverage": "uvm_pkg.uvm_test_top.env.cov_model.counters_covg.counters_cg.x_check_mcycle",
        "Comment": ""
    },
    {
        "Requirement Location": "",
        "Feature": "Hardware Performance Monitor",
        "Sub Feature": "",
        "Feature Description": "",
        "Verification Goal": "When enabled the count advances with each valid gated clock\n",
        "Pass/Fail Criteria": "Assertion Check",
        "Test Type": "Constrained-Random",
        "Coverage  Method": "Assertion Coverage",
        "Link to Coverage": "",
        "Comment": ""
    },
    {
        "Requirement Location": "",
        "Feature": "Hardware Performance Monitor",
        "Sub Feature": "minstret",
        "Feature Description": "Counts the number of instructions the hart has retired.",
        "Verification Goal": "Check the value of the counter. Exercise it with different sequence of instructions.",
        "Pass/Fail Criteria": "Check against ISS",
        "Test Type": "Constrained-Random",
        "Coverage  Method": "Functional Coverage",
        "Link to Coverage": "uvm_pkg.uvm_test_top.env.cov_model.counters_covg.counters_cg.x_check_minstret",
        "Comment": ""
    },
    {
        "Requirement Location": "",
        "Feature": "Hardware Performance Monitor",
        "Sub Feature": "",
        "Feature Description": "",
        "Verification Goal": "Read of minstret returns current instruction count. This property could use the RVFI to validate",
        "Pass/Fail Criteria": "Assertion Check",
        "Test Type": "Constrained-Random",
        "Coverage  Method": "Assertion Coverage",
        "Link to Coverage": "",
        "Comment": ""
    },
    {
        "Requirement Location": "",
        "Feature": "Hardware Performance Monitor",
        "Sub Feature": "mhpmcounter3-mhpmcounte31\n\nmhpmevent3-mhpmevent31",
        "Feature Description": "Additional 64-bits event counters mhpmcounter3-mhpmcounte31.\nThe event selector CSR mhpmevent3-mhpmevent31 control which event causes the corresponding counter to increment.\nThe meaning of these events is defined by the platform. Event \"0\" is defined to mean \"no event\".\n",
        "Verification Goal": "Specific checks in the Directed Test:\n- Check that the event 0 means no event.\n- Check different combinations of events and counters.\n- Check that if multiple events happen at the same cycle, only increment +1.\n- Check all events can individually, separately increment counter.\n- Use parameter NUM_MHPMCOUNTERS to increase counters to maximum and randomly check if counters are implemented/counting\n- mcountinhibit always stops counting for any counter\n",
        "Pass/Fail Criteria": "Self Checking Test",
        "Test Type": "Directed Self-Checking",
        "Coverage  Method": "Testcase",
        "Link to Coverage": "hpmcounter_basic_test.c\n\nhmpcounter_hazard_test.c",
        "Comment": ""
    },
    {
        "Requirement Location": "",
        "Feature": "Hardware Performance Monitor",
        "Sub Feature": "Overflow",
        "Feature Description": "For each counter, its two 32-bit registers works as one 64-bit register",
        "Verification Goal": "Counter overflows from lower counter mhpmcount to upper counter mhpmcounth (most important to test is mcycle[h] and minstret[h])",
        "Pass/Fail Criteria": "Assertion Check",
        "Test Type": "Constrained-Random",
        "Coverage  Method": "Assertion Coverage",
        "Link to Coverage": "",
        "Comment": ""
    },
    {
        "Requirement Location": "",
        "Feature": "Hardware Performance Monitor",
        "Sub Feature": "",
        "Feature Description": "",
        "Verification Goal": "Counter overflows from all ones in both mhpmcount and mhpmcounth to zero (most important to test is mcycle[h] and minstret[h])",
        "Pass/Fail Criteria": "Assertion Check",
        "Test Type": "Constrained-Random",
        "Coverage  Method": "Assertion Coverage",
        "Link to Coverage": "",
        "Comment": ""
    },
    {
        "Requirement Location": "CORE-V CV32E40X User Manual",
        "Feature": "Performance Counters",
        "Sub Feature": "CYCLES",
        "Feature Description": "platform specific event bit[0]",
        "Verification Goal": "Increments as long as the gated clock is ticking",
        "Pass/Fail Criteria": "Self Checking Test",
        "Test Type": "Directed Self-Checking",
        "Coverage  Method": "Testcase",
        "Link to Coverage": "TODO all of these selectors can be tested in \"mhpmcounter_basic_test.c\" and \"mhpmcounter_hazard_test.c\" but the tests have to be updated to the new counters spec",
        "Comment": ""
    },
    {
        "Requirement Location": "",
        "Feature": "Performance Counters",
        "Sub Feature": "INSTR",
        "Feature Description": "platform specific event bit[1]",
        "Verification Goal": "Check that the counter increments for each instruction being retired (both non-compressed and compressed)\n",
        "Pass/Fail Criteria": "Self Checking Test",
        "Test Type": "Directed Self-Checking",
        "Coverage  Method": "Testcase",
        "Link to Coverage": "",
        "Comment": ""
    },
    {
        "Requirement Location": "",
        "Feature": "Performance Counters",
        "Sub Feature": "COMP_INSTR",
        "Feature Description": "platform specific event bit[2]",
        "Verification Goal": "Check that the counter increments for each compressed instruction being retired (and not non-compressed)\n",
        "Pass/Fail Criteria": "Self Checking Test",
        "Test Type": "Directed Self-Checking",
        "Coverage  Method": "Testcase",
        "Link to Coverage": "",
        "Comment": ""
    },
    {
        "Requirement Location": "",
        "Feature": "Performance Counters",
        "Sub Feature": "JUMP",
        "Feature Description": "platform specific event bit[3]",
        "Verification Goal": "Increment for each taken jump instruction retired",
        "Pass/Fail Criteria": "Self Checking Test",
        "Test Type": "Directed Self-Checking",
        "Coverage  Method": "Testcase",
        "Link to Coverage": "",
        "Comment": ""
    },
    {
        "Requirement Location": "",
        "Feature": "Performance Counters",
        "Sub Feature": "BRANCH",
        "Feature Description": "platform specific event bit[4]",
        "Verification Goal": "Increment for each branch instruction retired",
        "Pass/Fail Criteria": "Self Checking Test",
        "Test Type": "Directed Self-Checking",
        "Coverage  Method": "Testcase",
        "Link to Coverage": "",
        "Comment": ""
    },
    {
        "Requirement Location": "",
        "Feature": "Performance Counters",
        "Sub Feature": "BRANCH_TAKEN",
        "Feature Description": "platform specific event bit[5]",
        "Verification Goal": "Increment for each branch instruction being taken is retired",
        "Pass/Fail Criteria": "Self Checking Test",
        "Test Type": "Directed Self-Checking",
        "Coverage  Method": "Testcase",
        "Link to Coverage": "",
        "Comment": ""
    },
    {
        "Requirement Location": "",
        "Feature": "Performance Counters",
        "Sub Feature": "INTR_TAKEN",
        "Feature Description": "platform specific event bit[6]",
        "Verification Goal": "Increment for each taken interrupt (excluding NMI)",
        "Pass/Fail Criteria": "Self Checking Test",
        "Test Type": "Directed Self-Checking",
        "Coverage  Method": "Testcase",
        "Link to Coverage": "",
        "Comment": ""
    },
    {
        "Requirement Location": "",
        "Feature": "Performance Counters",
        "Sub Feature": "DATA_READ",
        "Feature Description": "platform specific event bit[7]",
        "Verification Goal": "Increment for each read transactions on the OBI data interface",
        "Pass/Fail Criteria": "Self Checking Test",
        "Test Type": "Directed Self-Checking",
        "Coverage  Method": "Testcase",
        "Link to Coverage": "",
        "Comment": ""
    },
    {
        "Requirement Location": "",
        "Feature": "Performance Counters",
        "Sub Feature": "DATA_WRITE",
        "Feature Description": "platform specific event bit[8]",
        "Verification Goal": "Increment for each write transactions on the OBI data interface",
        "Pass/Fail Criteria": "Self Checking Test",
        "Test Type": "Directed Self-Checking",
        "Coverage  Method": "Testcase",
        "Link to Coverage": "",
        "Comment": ""
    },
    {
        "Requirement Location": "",
        "Feature": "Performance Counters",
        "Sub Feature": "IF_INVALID",
        "Feature Description": "platform specific event bit[9]",
        "Verification Goal": "Increment each time IF causes ID stage under-utilization (!if_valid_o && id_ready_i)",
        "Pass/Fail Criteria": "Self Checking Test",
        "Test Type": "Directed Self-Checking",
        "Coverage  Method": "Testcase",
        "Link to Coverage": "",
        "Comment": ""
    },
    {
        "Requirement Location": "",
        "Feature": "Performance Counters",
        "Sub Feature": "ID_INVALID",
        "Feature Description": "platform specific event bit[10]",
        "Verification Goal": "Increment each time ID causes EX stage under-utilization (!id_valid_o && ex_ready_i)",
        "Pass/Fail Criteria": "Self Checking Test",
        "Test Type": "Directed Self-Checking",
        "Coverage  Method": "Testcase",
        "Link to Coverage": "",
        "Comment": ""
    },
    {
        "Requirement Location": "",
        "Feature": "Performance Counters",
        "Sub Feature": "EX_INVALID",
        "Feature Description": "platform specific event bit[11]",
        "Verification Goal": "Increment each time EX causes WB stage under-utilization (!ex_valid_o && wb_ready_i)",
        "Pass/Fail Criteria": "Self Checking Test",
        "Test Type": "Directed Self-Checking",
        "Coverage  Method": "Testcase",
        "Link to Coverage": "",
        "Comment": ""
    },
    {
        "Requirement Location": "",
        "Feature": "Performance Counters",
        "Sub Feature": "WB_INVALID",
        "Feature Description": "platform specific event bit[12]",
        "Verification Goal": "Increment each time WB causes regfile under-utilization (!wb_valid_o)",
        "Pass/Fail Criteria": "Self Checking Test",
        "Test Type": "Directed Self-Checking",
        "Coverage  Method": "Testcase",
        "Link to Coverage": "",
        "Comment": ""
    },
    {
        "Requirement Location": "",
        "Feature": "Performance Counters",
        "Sub Feature": "ID_LD_STALL",
        "Feature Description": "platform specific event bit[13]",
        "Verification Goal": "Check that the counter increments for each stall cycle due to a load use hazard",
        "Pass/Fail Criteria": "Self Checking Test",
        "Test Type": "Directed Self-Checking",
        "Coverage  Method": "Testcase",
        "Link to Coverage": "",
        "Comment": ""
    },
    {
        "Requirement Location": "",
        "Feature": "Performance Counters",
        "Sub Feature": "ID_JMP_STALL",
        "Feature Description": "platform specific event bit[14]",
        "Verification Goal": "Check that the counter increments for each stall cycle due to a jump",
        "Pass/Fail Criteria": "Self Checking Test",
        "Test Type": "Directed Self-Checking",
        "Coverage  Method": "Testcase",
        "Link to Coverage": "",
        "Comment": ""
    },
    {
        "Requirement Location": "",
        "Feature": "Performance Counters",
        "Sub Feature": "WB_DATA_STALL",
        "Feature Description": "platform specific event bit[15]",
        "Verification Goal": "Increment each time WB stage is stalled by loads/stores",
        "Pass/Fail Criteria": "Self Checking Test",
        "Test Type": "Directed Self-Checking",
        "Coverage  Method": "Testcase",
        "Link to Coverage": "",
        "Comment": ""
    },
    {
        "Requirement Location": "",
        "Feature": "Performance Counters",
        "Sub Feature": "NUM_MHPMCOUNTERS",
        "Feature Description": "Parameter controling available number of mhpmcounters",
        "Verification Goal": "Test that the CSRs behave correctly when set to 0 (minimum), 29 (maximum), 1 (default), and 4 (arbitrary amount)",
        "Pass/Fail Criteria": "Self Checking Test",
        "Test Type": "Directed Self-Checking",
        "Coverage  Method": "Testcase",
        "Link to Coverage": "",
        "Comment": ""
    },
    {
        "Requirement Location": "",
        "Feature": "Performance Counters",
        "Sub Feature": "Retirement timing",
        "Feature Description": "Updating retirement-related counters must have happened within the time the instruction is considered retired (i.e. must be visible on the rvfi retirement)",
        "Verification Goal": "Check that retirement-related counters (INSTR, COMP_INSTR, JUMP, BRANCH, BRANCH_TAKEN) don't update too late",
        "Pass/Fail Criteria": "Assertion Check",
        "Test Type": "Constrained-Random",
        "Coverage  Method": "Assertion Coverage",
        "Link to Coverage": "",
        "Comment": ""
    },
    {
        "Requirement Location": "RISC-V External Debug Support Version 0.13.2",
        "Feature": "Debug Mode",
        "Sub Feature": "stopcount",
        "Feature Description": "stopcount is tied to 0 so debug mode has no effect on counters",
        "Verification Goal": "mcycle continues during debug",
        "Pass/Fail Criteria": "Assertion Check",
        "Test Type": "Constrained-Random",
        "Coverage  Method": "Assertion Coverage",
        "Link to Coverage": "",
        "Comment": ""
    },
    {
        "Requirement Location": "",
        "Feature": "Debug Mode",
        "Sub Feature": "",
        "Feature Description": "",
        "Verification Goal": "minstret continues during debug",
        "Pass/Fail Criteria": "Check against ISS",
        "Test Type": "Constrained-Random",
        "Coverage  Method": "Functional Coverage",
        "Link to Coverage": "uvm_pkg.uvm_test_top.env.cov_model.counters_covg.counters_cg.x_minstret_in_dbg",
        "Comment": "Ensure that minstret is read during debug mode"
    },
    {
        "Requirement Location": "",
        "Feature": "Debug Mode",
        "Sub Feature": "",
        "Feature Description": "",
        "Verification Goal": "hpmcounter[31-3] continues during debug",
        "Pass/Fail Criteria": "Self Checking Test",
        "Test Type": "Directed Self-Checking",
        "Coverage  Method": "Testcase",
        "Link to Coverage": "",
        "Comment": ""
    },
    {
        "Requirement Location": "",
        "Feature": "Debug Mode",
        "Sub Feature": "",
        "Feature Description": "",
        "Verification Goal": "hpmcounter[31-3] continues during debug",
        "Pass/Fail Criteria": "",
        "Test Type": "",
        "Coverage  Method": "",
        "Link to Coverage": "",
        "Comment": ""
    },
    {
        "Requirement Location": "",
        "Feature": "Debug Mode",
        "Sub Feature": "",
        "Feature Description": "",
        "Verification Goal": "hpmcounter[31-3] continues during debug",
        "Pass/Fail Criteria": "",
        "Test Type": "",
        "Coverage  Method": "",
        "Link to Coverage": "",
        "Comment": ""
    },
    {
        "Requirement Location": " -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- END -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------",
        "Feature": "Debug Mode",
        "Sub Feature": "",
        "Feature Description": "",
        "Verification Goal": "hpmcounter[31-3] continues during debug",
        "Pass/Fail Criteria": "",
        "Test Type": "",
        "Coverage  Method": "",
        "Link to Coverage": "",
        "Comment": ""
    }
]